name: Backend CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('EvidencaLetenjaBackend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r EvidencaLetenjaBackend/requirements.txt
          
  test-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install test dependencies
        run: |
          pip install pytest pytest-cov coverage httpx pytest-html
          pip install -r EvidencaLetenjaBackend/requirements.txt
      - name: Set up Python path
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE/EvidencaLetenjaBackend/app:$PYTHONPATH" >> $GITHUB_ENV
      - name: Run tests with coverage
        working-directory: EvidencaLetenjaBackend
        run: |
          python -m pytest app/test_*.py \
            --cov=app \
            --cov-report=xml \
            --cov-report=html:coverage-html \
            --html=test-results.html \
            --self-contained-html
            
      - name: Upload coverage XML report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: EvidencaLetenjaBackend/coverage.xml
          
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: EvidencaLetenjaBackend/coverage-html/
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: EvidencaLetenjaBackend/test-results.html

  dockerize-and-push-dev:
    needs: test-backend
    runs-on: ubuntu-latest
    environment: Development
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:dev ./EvidencaLetenjaBackend
          docker tag ${{ secrets.DOCKER_USERNAME }}/backend:dev ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:dev
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
          

  sonarcloud-analysis:
    needs: test-backend
    runs-on: ubuntu-latest
    environment:
      name: Production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install coverage
          pip install -r EvidencaLetenjaBackend/requirements.txt
      - name: Run tests with coverage
        working-directory: EvidencaLetenjaBackend
        run: |
          python -m pytest app/test_*.py \
            --cov=app \
            --cov-report=xml \
            --cov-report=html:coverage-html
      - name: Upload coverage XML report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: EvidencaLetenjaBackend/coverage.xml
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.ORGANIZATION_KEY }} \
            -Dsonar.sources=EvidencaLetenjaBackend/app \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.python.coverage.reportPaths=EvidencaLetenjaBackend/coverage.xml


  dockerize-and-push-prod:
    needs: test-backend
    runs-on: ubuntu-latest
    environment:
      name: Production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:prod ./EvidencaLetenjaBackend
          docker tag ${{ secrets.DOCKER_USERNAME }}/backend:prod ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:prod
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}    

  deploy-backend:
    needs: test-backend
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deployment
        if: github.ref == 'refs/heads/develop'
        env:
          deploy_url: ${{ secrets.BACKEND_RENDER_DEPLOY_HOOK}}
        run: |
          curl "$deploy_url"
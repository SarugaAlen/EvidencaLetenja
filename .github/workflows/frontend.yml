name: Frontend CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/evidencaLetenja/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/evidencaLetenja/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend/evidencaLetenja
          npm install

      - name: Build
        run: |
          cd frontend/evidencaLetenja
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/evidencaLetenja/build

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/evidencaLetenja/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/evidencaLetenja/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend/evidencaLetenja
          npm install

      - name: Run tests with coverage
        run: |
          cd frontend/evidencaLetenja
          npm run test:coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/evidencaLetenja/coverage
  
  dockerize-and-push-dev:
    needs: test-frontend
    runs-on: ubuntu-latest
    environment: 
      name: Development
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:dev ./frontend/evidencaLetenja
          docker tag ${{ secrets.DOCKER_USERNAME }}/frontend:dev ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:dev
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha}}
  
  sonarcloud-analysis:
    needs: test-frontend
    runs-on: ubuntu-latest
    environment:
      name: Production
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install dependencies
      run: |
        cd frontend/evidencaLetenja
        npm install

    - name: Run tests with coverage
      run: |
        cd frontend/evidencaLetenja
        npm run test:coverage

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: frontend/evidencaLetenja/coverage

    - name: SonarCloud Scan
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=${{ secrets.PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.ORGANIZATION_KEY }} \
          -Dsonar.sources=./frontend/evidencaLetenja/src \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.javascript.lcov.reportPaths=frontend/evidencaLetenja/coverage/lcov.info \

  dockerize-and-push-prod:
    needs: [test-frontend, sonarcloud-analysis]
    runs-on: ubuntu-latest
    environment:
      name: Production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:prod ./frontend/evidencaLetenja
          docker tag ${{ secrets.DOCKER_USERNAME }}/frontend:prod ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:prod
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha}}       

  deploy-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deployment
        if: github.ref == 'refs/heads/develop'
        env:
          deploy_url: ${{ secrets.FRONTEND_RENDER_DEPLOY_HOOK}}
        run: |
          curl "$deploy_url"

  deploy-pages:
    needs: test-frontend
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Deploy to Github Pages
       uses: peaceiris/actions-gh-pages@v3
       with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         publish_dir: ./docs
         publish_branch: gh-pages 
